Welcome to the FFUF Tool Cookbook! This guide will help you use the FFUF Tool, a powerful utility for finding hidden directories and files on websites and servers.

FFUF (Fuzz Faster U Fool) is a command-line tool used to uncover hidden directories and files on web servers by sending multiple requests with various parameters. This process, known as "fuzzing," helps identify potential vulnerabilities that could be exploited.

-> Installation
1. Prerequisites: Ensure you have Go installed on your system.
2. Install FFUF:
   - Open your terminal.
   - Run the command: `go install github.com/ffuf/ffuf@latest`
   - Add the Go bin directory to your PATH if not already done.

-> Step-by-Step Guide

Step 1: Open Your Terminal
- Launch the terminal application on your computer.

Step 2: Basic FFUF Command
- To start using FFUF, you need a URL and a wordlist (a list of potential directory and file names).
- Example Command:
  ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt
  
Step 3: Understand the Command
- `-u http://example.com/FUZZ`: The target URL, where `FUZZ` is the placeholder for the fuzzing process.
- `-w /path/to/wordlist.txt`: The path to the wordlist file.

Step 4: Run the Command
- Press Enter to execute the command.
- FFUF will start sending requests to the target URL using the words from the wordlist to find hidden directories and files.

Example Scan
To scan a website using a common wordlist, you might use:
ffuf -u http://example.com/FUZZ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt

- Specifying HTTP Methods:
  ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -X POST
- Filtering Responses:
  - By Status Code:
    ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -fc 404
  - By Size:
    ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -fs 1234
- To save the scan results in a file:
  ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -o results.json -of json
- Use multiple wordlists for comprehensive scanning:
  ffuf -u http://example.com/FUZZ -w /path/to/wordlist1.txt,/path/to/wordlist2.txt

-Specifying Headers
Sometimes you need to include custom headers in your requests. This is common when dealing with APIs or web applications that require authentication tokens or specific headers.
ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -H "Authorization: Bearer YOUR_TOKEN_HERE"

-Adding Multiple Headers
You can add multiple headers by repeating the `-H` flag.
ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -H "Header1: value1" -H "Header2: value2"

-Using POST Data
If you need to send POST requests with specific data, use the `-d` flag.
ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -X POST -d "username=FUZZ&password=secret"

-Using a Proxy
To route your requests through a proxy, use the `-x` flag.
ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -x http://127.0.0.1:8080

-Filtering by Response Words
Filter results based on the number of words in the response.
ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -fw 100

-Filtering by Response Lines
Filter results based on the number of lines in the response.
ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -fl 20

-Matching by Regex
Match responses that contain a specific regex pattern.
ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -mr "Success"

-Ignoring SSL Errors
If you encounter SSL errors, you can instruct FFUF to ignore them with the `-k` flag.
ffuf -u https://example.com/FUZZ -w /path/to/wordlist.txt -k

-Recursive Fuzzing
Perform recursive directory fuzzing to explore deeper levels of directories.
ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -recursion

-Setting Recursion Depth
Control the depth of recursive fuzzing.
ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -recursion -recursion-depth 3

-Time Delay Between Requests
Set a delay between requests to avoid overwhelming the server.
ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -p 0.5

-Rate Limiting
Limit the number of requests per second to be polite to the target server.
ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -rate 100

-Verbose Output
Enable verbose output to see more detailed information during the scan.
ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -v

-Colorize Output
Enable colorized output to make it easier to read the results in the terminal.
ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -c

-Using Multiple Fuzz Keywords
Use multiple fuzz keywords in the URL, headers, or POST data.
ffuf -u http://example.com/FUZZ/api/v1/RESOURCE -w /path/to/wordlist1.txt:/path/to/wordlist2.txt -w /path/to/resource-list.txt -H "Authorization: Bearer YOUR_TOKEN_HERE"

-Running FFUF in Quiet Mode
Suppress most of the output to only show results.
ffuf -u http://example.com/FUZZ -w /path/to/wordlist.txt -s








